events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=30s;  # Docker internal DNS

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    keepalive_timeout 65s;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    upstream authentication {
        server authentication:3000;
    }

    upstream match {
        server match:3000;
    }

    upstream pari {
        server pari:3000;
    }

    upstream paiement {
        server paiement:3000;
    }

    upstream prometheus {
        server prometheus:9090;
    }

    upstream grafana {
        server grafana:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # Rate limiting
        limit_req zone=one burst=5;

        # Metrics endpoint for Prometheus
        location /metrics {
            stub_status on;
            access_log off;
            allow 172.18.0.0/16;  # Docker network
            deny all;
        }

        # Authentication routes (public)
        location /auth/ {
            proxy_http_version 1.1;
            proxy_pass http://authentication;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type "application/json";
            proxy_read_timeout 10s;
        }

        # Authentication verification subrequest
        location = /auth/verify {
            internal;
            proxy_pass http://authentication/auth/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
        }

        # Match Service
        location /matches {
            auth_request /auth/verify;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $auth_user $upstream_http_x_user;
            
            proxy_http_version 1.1;
            proxy_pass http://match;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User $auth_user;
        }

        # Betting Service
        location /bets {
            auth_request /auth/verify;
            auth_request_set $auth_status $upstream_status;
            
            error_page 401 = @error401;
            error_page 504 = @error504;
            error_page 500 = @error500;
            
            proxy_http_version 1.1;
            proxy_pass http://pari/bets;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Authorization $http_authorization;
            proxy_read_timeout 10s;
        }

        location @error401 {
            return 401 '{"error": "Unauthorized - Invalid or expired token"}';
            add_header Content-Type application/json;
        }

        location @error504 {
            return 504 '{"error": "Gateway Timeout - Authentication service not responding"}';
            add_header Content-Type application/json;
        }

        location @error500 {
            return 500 '{"error": "Internal Server Error - Something went wrong"}';
            add_header Content-Type application/json;
        }

        # Payment Service
        location /payments {
            auth_request /auth/verify;
            auth_request_set $auth_status $upstream_status;
            
            proxy_http_version 1.1;
            proxy_pass http://paiement;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Monitoring routes (protected, admin only)
        location /prometheus/ {
            auth_request /auth/verify;
            auth_request_set $auth_status $upstream_status;
            
            proxy_http_version 1.1;
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            auth_request /auth/verify;
            auth_request_set $auth_status $upstream_status;
            
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;

            # Allow embedding
            proxy_hide_header X-Frame-Options;

            # Remove /grafana/ prefix when passing to backend
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana;
        }
    }
}